{"ts":1354371455286,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function User(name) {\n\tvar self = this;\n\tself.name = name;\n\tself.onlineSince = getCurrentTime();\n}\n\nUser.prototype.toJSON = function() {\n    var data = {};\n    data.name = this.name;\n    data.onlineSince = this.onlineSince;\n    return data;\n};\n\nUser.create = function(data) {\n\tvar user = new User(data.name);\n\tuser.onlineSince = data.onlineSince;\n\treturn user;\n};\n\nfunction Message(content, user) {\n\tvar self = this;\n\tself.content = content;\n\tself.user = user;\n\tself.time = getCurrentTime();\n}\n\nMessage.prototype.toJSON = function() {\n\tvar data = new Message(this.content, this.user);\n\tdata.time = this.time;\n\treturn data;\n};\n\nMessage.create = function(data) {\n\tvar message = new Message(data.content, data.user);\n\tmessage.time = data.time;\n\treturn message;\n}\n\n\n\n\nfunction getCurrentTime() {\n\tvar date = new Date();\n\tvar hours = date.getHours()\n\tvar minutes = date.getMinutes()\n\tif (minutes < 10){\n\t\tminutes = \"0\" + minutes\n\t}\n\treturn hours + \":\" + minutes;\n}\n\n\n\n\nfunction ViewModel() {\n    var self = this;\n\n    self.messages = ko.observableArray();\n    self.users = ko.observableArray();\n\n    self.addMessage = function(message) {\n    \tself.messages.push(message);\n    };\n\n    self.addUser = function(user) {\n    \tself.users.push(user);\n    };\n}"]],"start1":0,"start2":0,"length1":0,"length2":1247}]],"length":1247}
{"contributors":[],"silentsave":false,"ts":1354371475870,"patch":[[{"diffs":[[0,"Array();"],[1,"\n    self.username = ko.observable('');"],[0,"\n\n    se"]],"start1":1081,"start2":1081,"length1":16,"length2":55}]],"length":1286,"saved":false}
{"ts":1354371502015,"patch":[[{"diffs":[[0,"ble('');"],[1,"\n    self.showMessageInput = ko.observable(false);"],[0,"\n\n    se"]],"start1":1120,"start2":1120,"length1":16,"length2":66}]],"length":1336,"saved":false}
{"ts":1354371642912,"patch":[[{"diffs":[[0,"\n    };\n"],[1,"    \n    self.checkUsername = function() {\n        if (self.username().length > 1) {\n            self.showMessageInput(true);\n        } else {\n            \n        }\n    };\n"],[0,"}"]],"start1":1327,"start2":1327,"length1":9,"length2":182}]],"length":1509,"saved":false}
{"ts":1354371871665,"patch":[[{"diffs":[[0,"ngth > 1) {\n"],[1,"            user = new User(self.username);\n            chat.addUser(user);\n"],[0,"            "]],"start1":1408,"start2":1408,"length1":24,"length2":100}]],"length":1585,"saved":false}
{"ts":1354371893495,"patch":[[{"diffs":[[0,"nput(true);\n"],[1,"            socket.emit('connect', JSON.stringify(user));\n"],[0,"        } el"]],"start1":1525,"start2":1525,"length1":24,"length2":82}]],"length":1643,"saved":false}
{"ts":1354371920274,"patch":[[{"diffs":[[0,"ssage;\n}"],[1,";"],[0,"\n\n\n\n\nfun"]],"start1":751,"start2":751,"length1":16,"length2":17},{"diffs":[[0,"tHours()"],[1,";"],[0,"\n\tvar mi"]],"start1":837,"start2":837,"length1":16,"length2":17},{"diffs":[[0,"inutes()"],[1,";"],[0,"\n\tif (mi"]],"start1":871,"start2":871,"length1":16,"length2":17},{"diffs":[[0," minutes"],[1,";"],[0,"\n\t}\n\tret"]],"start1":918,"start2":918,"length1":16,"length2":17}]],"length":1647,"saved":false}
{"ts":1354372021648,"patch":[[{"diffs":[[0,"    "],[-1,"chat"],[1,"self"],[0,".add"]],"start1":1476,"start2":1476,"length1":12,"length2":12}]],"length":1647,"saved":false}
{"ts":1354372384789,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"socket.e"]],"start1":1545,"start2":1545,"length1":16,"length2":18}]],"length":1649,"saved":false}
{"ts":1354374693411,"patch":[[{"diffs":[[0,"    "],[-1,"//"],[0,"sock"]],"start1":1549,"start2":1549,"length1":10,"length2":8}]],"length":1647,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354400490401,"patch":[[{"diffs":[[0,"\n    };\n"],[1,"    \n    self.numberUsers = ko.computed(function() {\n        var numUsers = self.users().length;\n\n    \tif(numUsers==1) {\n    \t\treturn numUsers + \"User Online\";\n    \t} else {\n    \t\treturn numUsers + \"Users Online\";\n    \t}\n    });\n"],[0,"}"]],"start1":1638,"start2":1638,"length1":9,"length2":238}]],"length":1876,"saved":false}
{"ts":1354400521338,"patch":[[{"diffs":[[0,"h;\n\n    "],[-1,"\t"],[1,"    "],[0,"if(numUs"]],"start1":1740,"start2":1740,"length1":17,"length2":20},{"diffs":[[0,"s==1) {\n    "],[-1,"\t\t"],[1,"        "],[0,"return numUs"]],"start1":1762,"start2":1762,"length1":26,"length2":32},{"diffs":[[0,"e\";\n    "],[1,"   "],[-1,"\t"],[1," "],[0,"} else {"]],"start1":1811,"start2":1811,"length1":17,"length2":20},{"diffs":[[0,"e {\n    "],[-1,"\t\t"],[1,"        "],[0,"return n"]],"start1":1828,"start2":1828,"length1":18,"length2":24},{"diffs":[[0,"e\";\n    "],[-1,"\t"],[1,"    "],[0,"}\n    })"]],"start1":1874,"start2":1874,"length1":17,"length2":20}]],"length":1897,"saved":false}
{"ts":1354400599462,"patch":[[{"diffs":[[0,"= this;\n"],[-1,"\n"],[0,"    self"]],"start1":1004,"start2":1004,"length1":17,"length2":16},{"diffs":[[0,"ervableArray();\n"],[1,"    self.showMessageInput = ko.observable(false);\n"],[0,"    self.users ="]],"start1":1038,"start2":1038,"length1":32,"length2":82},{"diffs":[[0,"    "],[-1,"self.showMessageInput = ko.observable(false);\n"],[1,"\n    // Adds a new message to the list of messages."],[0,"\n   "]],"start1":1182,"start2":1182,"length1":54,"length2":59},{"diffs":[[0,"\n    };\n"],[1,"    \n    // Adds a new user to the list of users."],[0,"\n"],[-1,""],[0,"    self"]],"start1":1313,"start2":1313,"length1":17,"length2":66},{"diffs":[[0,"r);\n    };\n    \n"],[1,"    // Used to check if a username is correct.\n"],[0,"    self.checkUs"]],"start1":1431,"start2":1431,"length1":32,"length2":79},{"diffs":[[0,"   }\n    };\n"],[-1,""],[0,"    \n"],[1,"    // Returns a String with the number of users currently online\n"],[0,"    self.num"]],"start1":1784,"start2":1784,"length1":29,"length2":95}]],"length":2113,"saved":false}
{"ts":1354400645457,"patch":[[{"diffs":[[0,"er;\n};\n\n"],[1,"\n"],[0,"function"]],"start1":357,"start2":357,"length1":16,"length2":17}]],"length":2114,"saved":false}
{"ts":1354400693079,"patch":[[{"diffs":[[0,"er;\n};\n\n"],[-1,"\n"],[0,"function"]],"start1":357,"start2":357,"length1":17,"length2":16}]],"length":2113,"saved":false}
{"ts":1354400694523,"patch":[[{"diffs":[[0,"er;\n};\n\n"],[1,"\n"],[0,"function"]],"start1":357,"start2":357,"length1":16,"length2":17}]],"length":2114,"saved":false}
{"ts":1354400933453,"patch":[[{"diffs":[[0,"numUsers + \""],[1," "],[0,"User Online\""]],"start1":2006,"start2":2006,"length1":24,"length2":25},{"diffs":[[0,"sers + \""],[1," "],[0,"Users On"]],"start1":2073,"start2":2073,"length1":16,"length2":17}]],"length":2116,"saved":false}
{"ts":1354401797643,"patch":[[{"diffs":[[-1,"function User(name) {\n\tvar self = this;\n\tself.name = name;\n\tself.onlineSince = getCurrentTime();\n}\n\nUser.prototype.toJSON = function() {\n    var data = {};\n    data.name = this.name;\n    data.onlineSince = this.onlineSince;\n    return data;\n};\n\nUser.create = function(data) {\n\tvar user = new User(data.name);\n\tuser.onlineSince = data.onlineSince;\n\treturn user;\n};\n\n\nfunction Message(content, user) {\n\tvar self = this;\n\tself.content = content;\n\tself.user = user;\n\tself.time = getCurrentTime();\n}\n\nMessage.prototype.toJSON = function() {\n\tvar data = new Message(this.content, this.user);\n\tdata.time = this.time;\n\treturn data;\n};\n\nMessage.create = function(data) {\n\tvar message = new Message(data.content, data.user);\n\tmessage.time = data.time;\n\treturn message;\n};\n\n\n\n\nfunction getCurrentTime() {\n\tvar date = new Date();\n\tvar hours = date.getHours();\n\tvar minutes = date.getMinutes();\n\tif (minutes < 10){\n\t\tminutes = \"0\" + minutes;\n\t}\n\treturn hours + \":\" + minutes;\n}\n\n\n\n\nfunction ViewModel() {\n    var self = this;\n    self.messages = ko.observableArray();\n    self.showMessageInput = ko.observable(false);\n    self.users = ko.observableArray();\n    self.username = ko.observable('');\n    \n    // Adds a new message to the list of messages.\n    self.addMessage = function(message) {\n    \tself.messages.push(message);\n    };\n    \n    // Adds a new user to the list of users.\n    self.addUser = function(user) {\n    \tself.users.push(user);\n    };\n    \n    // Used to check if a username is correct.\n    self.checkUsername = function() {\n        if (self.username().length > 1) {\n            user = new User(self.username);\n            self.addUser(user);\n            self.showMessageInput(true);\n            socket.emit('connect', JSON.stringify(user));\n        } else {\n            \n        }\n    };\n    \n    // Returns a String with the number of users currently online\n    self.numberUsers = ko.computed(function() {\n        var numUsers = self.users().length;\n\n        if(numUsers==1) {\n            return numUsers + \" User Online\";\n        } else {\n            return numUsers + \" Users Online\";\n        }\n    });\n}"]],"start1":0,"start2":0,"length1":2116,"length2":0}]],"length":0,"saved":false}
{"ts":1354401852337,"patch":[[{"diffs":[[1,"    function User(name) {\n        var self = this;\n        self.name = name;\n    \tself.onlineSince = getCurrentTime();\n    }\n    \n    User.prototype.toJSON = function() {\n        var data = {};\n        data.name = this.name;\n        data.onlineSince = this.onlineSince;\n        return data;\n    };\n    \n    User.create = function(data) {\n    \tvar user = new User(data.name);\n    \tuser.onlineSince = data.onlineSince;\n    \treturn user;\n    };\n    \n    \n    function Message(content, user) {\n    \tvar self = this;\n    \tself.content = content;\n    \tself.user = user;\n    \tself.time = getCurrentTime();\n    }\n    \n    Message.prototype.toJSON = function() {\n    \tvar data = new Message(this.content, this.user);\n    \tdata.time = this.time;\n    \treturn data;\n    };\n    \n    Message.create = function(data) {\n    \tvar message = new Message(data.content, data.user);\n    \tmessage.time = data.time;\n    \treturn message;\n    };"]],"start1":0,"start2":0,"length1":0,"length2":919}]],"length":919,"saved":false}
